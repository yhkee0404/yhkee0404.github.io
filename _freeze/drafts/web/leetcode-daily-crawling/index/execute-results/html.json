{
  "hash": "173aee07095f8455dee63ccbf69b06c7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LeetCode Daily Crawling\"\nsubtitle: \"Server 비용 없는 Google Sheets 운영하기\"\nauthor: \"Yunho Kee\"\ndate: \"2024-03-17\"\ncategories:\n  - featured\n  - web\n  - crawling\n  - graphql\n  - cloud\n  - spreadsheet\n  - \"request method\"\n  - \"query string\"\n  - \"chrome devtools\"\n  - leetcode\n  - discord\nimage: \"화면 캡처 2024-03-16 235413.jpg\"\n---\n\n## Intro\n\nChatGPT처럼 동적으로 응답하는 Server에 종종 접속하는데 어느 날부터 연결이 안 된다. 이참에 직접 개발해 보려는데 배포는 Cloud Service가 편하다고 한다. 그런데 종류가 많다: AWS EC2 같은 IaaS(Infrastructure as a Service), AWS EKS 같은 CaaS(Container as a Service), Heroku 같은 PaaS(Platform as a Service), Google Firebase 같은 BaaS(Backend as a Service), AWS Lambda 같은 FaaS(Function as a Service), Google Sheets 같은 SaaS(Software as a Service).\n\n\n{{< video https://youtu.be/yjD2n_e9E3w >}}\n\n\n\n요즘 Excel로 GPT도 만든다던데, 저용량의 무료 SaaS가 기존 Crawling Server를 대체할 수 있을까?\n\n## Goodbye LeetCode Click\n\n::: {layout=\"[[1], [1]]\"}\n![LeetCode Click의 운영 중단](화면 캡처 2024-03-16 235413.jpg){group=\"leetcode-daily-crawling\" fig-alt=\"A screenshot of the discontinuation of the LeetCode click service.\"}\n\n![매일 리트코드를 풀던 카카오톡 오픈채팅방 반응](KakaoTalk_Snapshot_20240316_233937.png){group=\"leetcode-daily-crawling\" fig-alt=\"A captured conversation of people frustrated by the discontinuation of the LeetCode click service.\"}\n:::\n\n연말에 들어간 알고리즘 스터디에서 매일 리트코드 1문제를 풀었다. 문제는 [LeetCode Click](https://leetcode.click)에 접속하면 알아서 Redirect해 주니까 나는 그게 어떻게 선정되는지 전혀 몰랐다. 그 정도로 편했다. 그런데 열흘 전부터 운영이 중단돼 대안이 필요해졌다.\n\n## LeetCode Daily Coding Challenge Question\n\n![LeetCode Daily Question 확인 방법](화면 캡처 2024-03-17 003045.jpg){group=\"leetcode-daily-crawling\" fig-alt=\"A screenshot displaying today's question in the problem list and the daily questions for each day on the calendar on the LeetCode website.\"}\n\n그동안 풀던 문제들은 알고 보니 LeetCode에서 공식적으로 선정해 준 것들이었다. 문제 목록은 LeetCode의 Problems Page 하단에 있다. 그날의 문제는 목록의 첫번째 Page 맨 위에 있고 `Status`에 달력 Icon이 보인다. 그리고 Browser의 좌측 최하단을 보면 Link에 `daily-question` 같은 Parameter가 붙어 있다. 한편 우측의 달력에 마우스 커서를 Hover하면 날짜마다 Popup되는 문제들을 볼 수 있다. 이것이 수동으로 확인하는 방법이다.\n\n## LeetCode GraphQL API\n\n오늘의 문제가 특정되는 원리를 파악하면 육안으로 확인하는 과정을 자동화할 수 있을 것이다. 그래서 개발자 도구를 열었는데 검색이 잘 안 된다. 그래도 요청 목록에서 의심되는 `graphql/` 중 하나를 Click하니 `Preview` 또는 `Response` Tab에 다음처럼 쓸 만한 응답이 보인다.\n\n\n```{json #lst-response}\n{\n    \"data\": {\n        \"activeDailyCodingChallengeQuestion\": {\n            \"date\": \"2024-03-16\",\n            \"userStatus\": \"NotStart\",\n            \"link\": \"/problems/contiguous-array/\",\n            \"question\": {\n                \"acRate\": 47.945016299587756,\n                \"difficulty\": \"Medium\",\n                \"freqBar\": null,\n                \"frontendQuestionId\": \"525\",\n                \"isFavor\": false,\n                \"paidOnly\": false,\n                \"status\": null,\n                \"title\": \"Contiguous Array\",\n                \"titleSlug\": \"contiguous-array\",\n                \"hasVideoSolution\": false,\n                \"hasSolution\": true,\n                \"topicTags\": [\n                    {\n                        \"name\": \"Array\",\n                        \"id\": \"VG9waWNUYWdOb2RlOjU=\",\n                        \"slug\": \"array\"\n                    },\n                    {\n                        \"name\": \"Hash Table\",\n                        \"id\": \"VG9waWNUYWdOb2RlOjY=\",\n                        \"slug\": \"hash-table\"\n                    },\n                    {\n                        \"name\": \"Prefix Sum\",\n                        \"id\": \"VG9waWNUYWdOb2RlOjYxMDY4\",\n                        \"slug\": \"prefix-sum\"\n                    }\n                ]\n            }\n        }\n    }\n}\n```\n\n\n:::{.callout-note}\nGraphQL 응답은 Chrome 개발자 도구의 `Network` Tab에서 검색되지 않는 게 기본이다. 그래서 일일이 클릭해 확인해야 한다 &mdash; 다른 방법 아시면 댓글 부탁 드립니다!\n:::\n\n실제로는 이렇게 발견하지 않았다. 다른 GraphQL 요청에서 먼저 찾은 `dailyCodingChallengeV2`라는 단어가 특이하다고 생각해 GitHub에 검색해서 알아냈다. 즉 다른 데서 겨우 찾은 건데 나중에 알고 보니 여기에도 원래 있었다 &mdash; 저는 카카오톡으로 스터디하지만 Discord 쓰시는 분 계시면 [elprimobot](https://github.com/kajahno/elprimobot/blob/857cd02d8e34fd360ad908cb00edc2e1708e7250/api/leetcode/queries.js#L22) 유용해 보이네요!\n\n![Chrome 개발자 도구로 확인한 GraphQL 요청의 Payload](화면 캡처 2024-03-17 015135.jpg){group=\"leetcode-daily-crawling\" fig-alt=\"A screenshot of a GraphQL request's payload from Chrome DevTools.\"}\n\ncURL로 확인해 보니 특별한 Request Header 없이도 같은 응답이 온다. 이어서 실험한 결과.^[[REPL-driven development](https://www.cs.utexas.edu/ftp/garbage/cs345/schintro-v13/schintro_114.html)]  `operationName`, `variables` 등 일부 불필요한 항목을 지울 수 있었다.\n\n## GraphQL Query String\n\nPOST Method나 Request Body를 지원하지 않는 Client들이 많을 것 같다. Browser의 주소 창처럼 Get Method와 주소만으로도 응답이 오면 좋겠다. 그러면 Payload Body를 Query String으로 바꿔야겠다. 띄어쓰기나 특수문자는 어떻게 바꾸지?\n\n```javascript\nnew URLSearchParams({\"query\": \"query questionOfToday {\\n  activeDailyCodingChallengeQuestion {\\n    date\\n    link\\n    question {\\n      acRate\\n      difficulty\\n      frontendQuestionId: questionFrontendId\\n      title\\n      titleSlug\\n    }\\n  }\\n}\"}).toString()\n// 'query=query+questionOfToday+%7B%0A++activeDailyCodingChallengeQuestion+%7B%0A++++date%0A++++link%0A++++question+%7B%0A++++++acRate%0A++++++difficulty%0A++++++frontendQuestionId%3A+questionFrontendId%0A++++++title%0A++++++titleSlug%0A++++%7D%0A++%7D%0A%7D'\n```\n\n연속된 `+`는 하나로 줄일 수 있었다.\n\n## Google Sheets As a Crawling Apps\n\n[응답받은](#cb-1) @lst-response Link `/problems/contiguous-array/`가 완전한 주소였다면 Browser 또는 카카오톡 채팅방의 Hyperlink가 지원되어 Click하기 편했을 것이다. 주소 창에 도메인과 함께 붙여넣으면 되겠지만 불편하다. 카카오톡 오픈채팅봇은 기능 제한이 커 보이는데, 이제 와서 문자열 연산 때문에 Application Server 비용을 부담해야 할까? 다행히 스터디에서 사용하던 Google Sheets가 GET 요청, 문자열 연산, Hyperlink 기능을 지원한다: `IMPORTDATA`, `CONCATENATE`, `MID`, `LEN`.\n\n```scala\n=IMPORTDATA(\"https://leetcode.com/graphql?query=query+questionOfToday+%7B+activeDailyCodingChallengeQuestion+%7B+link+%7D+%7D\")\n=CONCATENATE(\"https://leetcode.com\", MID(D1, 56, LEN(D1) - 59))\n```\n\n![Google Sheets에서 Parsing한 GraphQL JSON 응답](화면 캡처 2024-03-17 031317.jpg){group=\"leetcode-daily-crawling\" fig-alt=\"A screenshot displaying a hyperlink parsed from a JSON response to a GraphQL request within Google Sheets.\"}\n\n한 칸으로 줄이지 못한 이유는 `MID`와 `LEN` 함수를 둘다 호출하는 데 `IMPORTDATA`의 중복 요청을 막기 위해서이다 &mdash; 중복 없는 한 칸 방법을 아신다면 댓글로 남겨 주세요!\n\n## Limitations\n\nGraphQL API에서 Query String을 지원하지 않거나 GET 이외의 Method 또는 Request Header를 요구하면 `IMPORTDATA`는 쓸 수 없다. 이때는 Google Sheets의 Python 기능 등이나 다른 방법을 알아봐야 한다.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}